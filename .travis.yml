language: rust
cache: cargo
rust:
  - 1.32.0 # uniform paths
  - stable
  - beta
  - nightly
os: linux

# always test things that aren't pushes (like PRs)
# never test tags or pushes to non-master branches (wait for PR)
# https://github.com/travis-ci/travis-ci/issues/2200#issuecomment-441395545)
if: type != push OR (tag IS blank AND branch = master)

jobs:
  allow_failures:
    - rust: nightly
  fast_finish: true
  include:
    - stage: check # do a pre-screen to make sure this is even worth testing
      script: cargo check --all-targets
      rust: stable
    # We lint using rustfmt and clippy on beta, to future-proof
    - stage: lint
      name: "Rust: beta, rustfmt"
      rust: beta
      install:
        - rustup component add rustfmt
      script:
        - cargo fmt -v -- --check
    - name: "Rust: beta, clippy"
      rust: beta
      install:
        - rustup component add clippy
      script:
        - cargo clippy --all-features --all-targets -- -D warnings
    - stage: coverage
      rust: stable
      sudo: required
      dist: xenial
      addons:
        apt:
          packages:
            - libssl-dev
      before_cache: |
        if !command -v cargo-tarpaulin > /dev/null 2>&1; then
          cargo install cargo-tarpaulin -f
        fi
      script:
        - cargo tarpaulin --version || true
      after_success: |
        cargo tarpaulin --all --out Xml  --run-types Tests Doctests
        bash <(curl -s https://codecov.io/bash)
    - stage: publish
      env:  GHP_UPLOAD_VERSION=0.3.2
      rust: nightly
      install:
        - cargo install --force --version $GHP_UPLOAD_VERSION cargo-ghp-upload
      script:
        - cargo doc --verbose && cargo ghp-upload -vv

stages:
  - check
  - test
  - lint
  - coverage
  # Only publish for non-pull request, non-tag changes to master branch
  - name: publish
    if: type = push AND tag IS blank AND branch = master
