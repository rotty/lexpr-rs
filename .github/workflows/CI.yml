on: [pull_request]
name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  msrv-check:
    # We require at least Rust 1.45, so we can use proc macros in
    # expression position without resorting to the `proc-macro-hack`
    # crate.
    name: "MSRV (1.45.0) compile check"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install 1.45 toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.45.0
          override: true
      # We use the git CLI here, since otherwise cargo fails with
      # "error reading from the zlib stream; class=Zlib (5)", see
      # <https://github.com/rust-lang/cargo/issues/10303>.
      - name: Run cargo build
        run: CARGO_NET_GIT_FETCH_WITH_CLI=true cargo build
        working-directory: ./msrv-test

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings


  codecov:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Build with instrumentation
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package lexpr --all-features --no-fail-fast
        env:
           CARGO_INCREMENTAL: '0'
           RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
           RUSTDOCFLAGS: '-Cpanic=abort'

      # TODO: collect statistics with `gcovr`, which doesn't play with
      # current "gcov" binary format.
      - name: Collect coverage information
        uses: actions-rs/grcov@v0.1

      # TODO: upload coverage, see
      # <https://github.com/marketplace/actions/codecov>
      - name: Upload to codecov
        uses: codecov/codecov-action@v1
